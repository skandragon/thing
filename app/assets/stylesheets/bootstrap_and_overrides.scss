@mixin no-box-shadow() {
    -webkit-box-shadow: none;
    -moz-box-shadow: none;
    box-shadow: none;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin rounded($radius: 5px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin gradient($from, $to) {
  background: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
  background: -moz-linear-gradient(top,  $from, $to);
  filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
}

/// Test if `$value` is a valid direction
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value) {
  $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));

  @return $is-keyword or $is-angle;
}

/// Convert a direction to legacy syntax
/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} is-direction
/// @require {function} convert-angle
/// @throw Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.;
@function legacy-direction($value) {
  @if is-direction($value) == false {
    @error "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.";
  }

  $conversion-map: (
          to top          : bottom,
          to top right    : bottom left,
          to right top    : left bottom,
          to right        : left,
          to bottom right : top left,
          to right bottom : left top,
          to bottom       : top,
          to bottom left  : top right,
          to left bottom  : right top,
          to left         : right,
          to left top     : right bottom,
          to top left     : bottom right
  );

  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }

  @return 90deg - $value;
}

@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

body { padding: 60px 0 0 0; }

.pretty-box {
    border: 1px solid #bbb;
    @include rounded(4px);
    padding: 10px;
    background-color: #eee;
}

table#changelog-modal {
  th {
    width: 30%;
  }
}

td.item-busy {
  background-color: #f0f000;
  text-align: center;
}

td.item-free {
  background-color: #80d0d0;
  text-align: center;
}

td.item-error {
  background-color: #d00000;
  text-align: center;
}

table#schedule {
  th.when { width: 10%; }
  th.name { width: 15%; }
  th.instructor { width: 10%; }
  th.description { width: 65%; }
}

.differ {
  ins {
    color: #008000;
    text-decoration: none;
  }
  del {
    color: #ff0000;
  }
}

.popover-inner {
  color: red;
  width: 600px;
}

@font-face {
  font-family: 'Chalkduster';
  src: local('Chalkduster'), asset-url('Chalkduster.ttf') format('truetype');
}

section {
  padding-top: 25px;
}

/* Specific jumbotrons
------------------------- */
/* supporting docs pages */
.subhead {
  padding-bottom: 0;
  margin-bottom: 9px;
}
.subhead h1 {
  font-size: 54px;
}

/* Subnav */
.subnav {
  width: 100%;
  height: 36px;
  @include linear-gradient(#f5f5f5, #eeeeee);
  border: 1px solid #e5e5e5;
  @include rounded(4px);
}
.subnav .nav {
  margin-bottom: 0;
}
.subnav .nav > li > a {
  margin: 0;
  padding-top:    11px;
  padding-bottom: 11px;
  border-left: 1px solid #f5f5f5;
  border-right: 1px solid #e5e5e5;
  @include rounded(0);
}
.subnav .nav > .active > a,
.subnav .nav > .active > a:hover {
  padding-left: 13px;
  color: #777;
  background-color: #e9e9e9;
  border-right-color: #ddd;
  border-left: 0;
//  .box-shadow(inset 0 3px 5px rgba(0,0,0,.05));
}
.subnav .nav > .active > a .caret,
.subnav .nav > .active > a:hover .caret {
  border-top-color: #777;
}
.subnav .nav > li:first-child > a,
.subnav .nav > li:first-child > a:hover {
  border-left: 0;
  padding-left: 12px;
  @include rounded(4px 0 0 4px);
}
.subnav .nav > li:last-child > a {
  border-right: 0;
}
.subnav .dropdown-menu {
  @include rounded(0 0 4px 4px);
}

.authentication {
  padding: 0;
}
a.provider {
  text-align: center;
  margin: 20px 0;
  span {
    display: block;
  }
}

table.classlist {
  th.actions { width:80px; }
  th.times { width: 75px; }
  th.location { width: 210px; }
  th.limits { width: 90px; }
}

a.watch {
  width: 50px;
  margin-bottom: 5px;
}

.chart {
  width: 860px;
  height: 150px;
  margin-bottom: 10px;
}
.chart_content {
  height: 150px;
  width: 750px;
  display: inline-block;
}
.chart_labels {
  height: 150px;
  width: 100px;
  display: inline-block;
}

.external-link {
}

.inline-link {
}

.percentage-label {
  display: inline-block;
  width: 5em;
  text-align: center;
}

.beta-text {
  color: #00a8cc;
}

//
// table tweaks
//
table.table {
  margin-top: 10px;
  margin-bottom: 10px;
}

//
// hero unit tweaks
//
.hero-unit h1 {
  margin-bottom: 15px;
}

.hero-unit.opening-page h1 {
  font-family: Chalkduster, sans-serif;
  font-size: 60px;
}

//
// Footer
//
.footer {
  margin-top: 45px;
  padding: 10px;
  border-top: 1px solid #111;
  @include linear-gradient(#333, #000);

  h1 {
    color: #ddd;
    font-size: 18px;
    margin-bottom: 0;
  }

  h3 {
    color: #ddd;
    font-size: 14px;
    margin-bottom: 0;
  }

  p {
    margin: 0 35px;
    color: #ccc;
  }

  a:link, a:visited, a:hover, a:active {
    color: #eee;
  }

  .copyright {
    text-align: center;
    color: #555;
  }
}

.authentications {
  margin-bottom: 20px;
}
.authentication {
}

.table-zebra4 tbody tr:nth-child(4n+3) td,
.table-zebra4 tbody tr:nth-child(4n+3) th,
.table-zebra4 tbody tr:nth-child(4n+4) td,
.table-zebra4 tbody tr:nth-child(4n+4) th {
  background-color: #f9f9f9;
}

#static_content {
  background-color: #ffffff;
  position: fixed;
  top: 40px;
  left: 0;
  padding: 5px 20px 0 20px;
  width: 100%;
}

#post_static_content {
  padding-top: 40px;
}

.bigurl {
  margin: 20px;
  padding: 20px;
  border: 2px dashed #f00;
  background-color: #ffffee;
  font-size: 24px;
}

div.error {
  border-top: 5px solid #f88;
  border-bottom: 5px solid #f88;
  padding-top: 3px;
  padding-bottom: 3px;
  margin-top: 3px;
  margin-bottom: 3px;
}
div.error .help-inline {
  font-weight: bold;
  background-color: #fee;
}

/* Fixed subnav on scroll, but only for 980px and up (sorry IE!) */
@media (min-width: 980px) {
  .subnav-fixed {
    position: fixed;
    top: 40px;
    left: 0;
    right: 0;
    z-index: 1020; /* 10 less than .navbar-fixed to prevent any overlap */
    border-color: #d5d5d5;
    border-width: 0 0 1px; /* drop the border on the fixed edges */
    @include rounded(0px);
    -webkit-box-shadow: inset 0 1px 0 #fff, 0 1px 5px rgba(0,0,0,.1);
       -moz-box-shadow: inset 0 1px 0 #fff, 0 1px 5px rgba(0,0,0,.1);
            box-shadow: inset 0 1px 0 #fff, 0 1px 5px rgba(0,0,0,.1);
    filter: progid:DXImageTransform.Microsoft.gradient(enabled=false); /* IE6-9 */
  }
  .subnav-fixed .nav {
    width: 938px;
    margin: 0 auto;
    padding: 0 1px;
  }
  .subnav .nav > li:first-child > a,
  .subnav .nav > li:first-child > a:hover {
    @include rounded(0);
  }
}

h2 {
  margin-top: 20px;
}

h3.event_day {
  margin-top: 30px;
}

/* Responsive Docs
-------------------------------------------------- */
@media (max-width: 480px) {
  /* Reduce padding above jumbotron */
  body { padding: 40px 0 0 0; }

  .hero-unit h1 {
    font-size: 35px;
  }

  /* Change up some type stuff */
  h2 {
    margin-top: 27px;
  }
  h2 small {
    display: block;
    line-height: 18px;
  }
  h3 {
    margin-top: 18px;
  }

  /* Masthead (home page jumbotron) */
  .masthead {
    padding-top: 0;
  }

  table code {
    white-space: normal;
    word-wrap: break-word;
    word-break: break-all;
  }

  .footer {
    padding-left: 10px;
    padding-right: 10px;
  }
}

@media (max-width: 768px) {
  /* Remove any padding from the body */
  body { padding: 0 0 0 0; }

  .container-fluid {
    padding: 0 5px;
  }

  /* Subnav */
  .subnav {
    position: static;
    top: auto;
    z-index: auto;
    width: auto;
    height: auto;
    background: #fff; /* whole background property since we use a background-image for gradient */
    @include no-box-shadow();
  }
  .subnav .nav > li {
    float: none;
  }
  .subnav .nav > li > a {
    border: 0;
  }
  .subnav .nav > li + li > a {
    border-top: 1px solid #e5e5e5;
  }
  .subnav .nav > li:first-child > a,
  .subnav .nav > li:first-child > a:hover {
    @include rounded(4px 4px 0 0);
  }

  .popover-well .popover-wrapper {
    margin-left: 0;
  }

  .footer {
    padding-left: 10px;
    padding-right: 10px;
  }
}

@media (min-width: 480px) and (max-width: 768px) {
}


@media (min-width: 768px) and (max-width: 980px) {
}

@media (min-width: 768px) {
  div.skan-form-inline > div {
    display: inline-table;
    margin-left: 10px;
  }

  .instructable_instances_start_time {
    .form-control-label {
      width: 65px;
    }
//    .controls {
//      margin-left: 70px;
//    }
  }

  .instructable_instances_location {
    .form-control-label {
      width: 60px;
    }
//    .controls {
//      margin-left: 70px;
//    }
  }

  .instructable_instances_override_location {
    .form-control-label {
      width: 115px;
    }
//    .controls {
//      margin-left: 125px;
//      width: 20px;
//    }
  }
}

.checkbox {
  input { margin-right: 0.5em; }
  label { margin-left: 0.5em; margin-right: 0.5em; }
}

.check_boxes.form-control-label { display: block; }

@media (max-width: 980px) {
  .navbar.navbar-fixed-top {
    padding: 0 10px;
  }
}

/* LARGE DESKTOP SCREENS */
@media (min-width: 1210px) {
  body { padding: 60px 0 0 0; }

  /* Update subnav container */
  .subnav-fixed .nav {
    width: 1168px; /* 2px less to account for left/right borders being removed when in fixed mode */
  }
}

nav {
  background-color: white;
}
